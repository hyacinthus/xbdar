basePath: /
definitions:
  app.Status:
    properties:
      startup:
        type: string
    type: object
  model.Chart:
    properties:
      chart_dashboards:
        items:
          $ref: '#/definitions/model.DashboardChart'
        type: array
      chart_param_json:
        $ref: '#/definitions/model.JSONObject'
        type: object
      dashboards:
        items:
          $ref: '#/definitions/model.Dashboard'
        type: array
      data_param_json:
        $ref: '#/definitions/model.JSONObject'
        type: object
      datasource:
        $ref: '#/definitions/model.Datasource'
        type: object
      datasource_domain:
        example: db
        type: string
      datasource_id:
        example: xxxx
        type: string
      datasource_type:
        example: mysql
        type: string
      name:
        example: 基础折线图
        type: string
      type:
        example: line
        type: string
    type: object
  model.Dashboard:
    properties:
      charts:
        items:
          $ref: '#/definitions/model.Chart'
        type: array
      children:
        items:
          $ref: '#/definitions/model.Dashboard'
        type: array
      dashboard_charts:
        items:
          $ref: '#/definitions/model.DashboardChart'
        type: array
      key:
        type: string
      layout_json:
        $ref: '#/definitions/model.JSONObject'
        type: object
      order:
        type: integer
      parent:
        $ref: '#/definitions/model.Dashboard'
        type: object
      parent_id:
        type: string
      title:
        type: string
    type: object
  model.DashboardChart:
    properties:
      chart:
        $ref: '#/definitions/model.Chart'
        type: object
      chart_id:
        type: string
      dashboard:
        $ref: '#/definitions/model.Dashboard'
        type: object
      dashboard_id:
        type: string
      data_param_json:
        $ref: '#/definitions/model.JSONObject'
        type: object
    type: object
  model.Datasource:
    properties:
      charts:
        items:
          $ref: '#/definitions/model.Chart'
        type: array
      domain:
        type: string
      name:
        type: string
      param_json:
        $ref: '#/definitions/model.JSONObject'
        type: object
      type:
        type: string
    type: object
  model.Entity: {}
  model.JSONObject:
    additionalProperties:
      type: object
    type: object
  xerr.Error:
    properties:
      code:
        type: integer
      error:
        type: string
      message:
        type: string
    type: object
  xpage.Pagination:
    properties:
      has_next:
        type: boolean
      has_prev:
        type: boolean
      items:
        type: object
      next_page:
        type: integer
      page:
        type: integer
      pages:
        type: integer
      per_page:
        type: integer
      prev_page:
        type: integer
      total:
        type: integer
    type: object
host: '{{.Host}}'
info:
  contact:
    email: webee.yw@gmail.com
    name: webee
    url: https://github.com/webee
  description: 展示商情数据报表
  license: {}
  title: 雪豹商情报表系统API
  version: 0.1.0
paths:
  /charts:
    get:
      consumes:
      - application/json
      operationId: get-charts
      parameters:
      - description: 第几页
        in: query
        name: page
        type: integer
      - description: 每页多少
        in: query
        name: per_page
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/xpage.Pagination'
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/xerr.Error'
            type: object
      summary: 分页获取图表基本信息
      tags:
      - Chart
  /charts/{id}:
    get:
      consumes:
      - application/json
      operationId: get-chart-by-id
      parameters:
      - description: Chart ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Chart'
            type: object
      summary: 获取图表基本信息
      tags:
      - Chart
  /charts/{id}/data:
    get:
      consumes:
      - application/json
      operationId: fetch-chart-data-by-id
      parameters:
      - description: Chart ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 任意类型数据
          schema:
            type: string
      summary: 拉取图表数据
      tags:
      - Chart
  /status:
    get:
      operationId: get-status
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/app.Status'
            type: object
      summary: 获取应用状态信息
      tags:
      - App
schemes:
- http
- https
swagger: "2.0"
